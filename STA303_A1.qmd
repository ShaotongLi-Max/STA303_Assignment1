---
title: "Modeling Family Size: Literacy and Marriage Age in Rural Portugal"
subtitle: "A Generalized Linear Model Approach"
author: 
  - Shaotong (Max) Li
date: 2024/11/17
date-format: long
abstract: ""
number-sections: true
format: pdf
---

```{r}
#| include: false
#| warning: false
#| message: false
#| echo: false

install.packages(c("ggplot2", "MASS", "dplyr","survival","kableExtra","patchwork","knitr","car","ggpubr"))

library(ggplot2)  
library(MASS)    
library(dplyr)    
library(survival)
library(kableExtra)
library(patchwork)
library(knitr)
library(car)
library(ggpubr)

# Load data
load("portugal.RData")

# Define family size
portugal$family_size <- portugal$children + 2

# Ensure monthsSinceM is treated as a numeric variable
portugal$monthsSinceM <- as.numeric(portugal$monthsSinceM)  

# Gamma Regression Model
gamma_model <- glm(
  family_size ~ literacy + monthsSinceM,
  data = portugal,
  family = Gamma(link = "log") 
)

# Fit a Weibull Regression Model
weibull_model <- survreg(Surv(family_size) ~ literacy + monthsSinceM, 
                         data = portugal, 
                         dist = "weibull")

# Fit Poisson Regression Model
poisson_model <- glm(
  family_size ~ literacy + monthsSinceM,
  data = portugal,
  family = poisson(link = "log")
)

# Generate predictions for all models
portugal <- portugal %>%
  mutate(
    pred_weibull = predict(weibull_model, type = "response"),
    pred_gamma = predict(gamma_model, type = "response"),
    pred_poisson <- predict(poisson_model, type = "response")
  )

```

# Introduction

# Methods

## Clean Data Process

In this study, we began by carefully selecting the variables most relevant to our research question: understanding how literacy and marriage age affect family size in rural Portugal. From the dataset, we identified three key variables:

children (Numerical): This variable represents the number of children in a family and serves as the basis for calculating the dependent variable, family_size.

ageMarried (Categorical): This variable captures the marriage age of individuals, categorized into meaningful intervals: 0to15, 15to18, 18to20, 20to22, 22to25, 25to30, and 30toInf. It reflects the social and demographic variation in marriage age and is included as an independent variable in the model.

literacy (Binary): A factor variable indicating whether an individual is literate (yes) or not (no). This variable is included as a second independent variable, as literacy is hypothesized to influence family planning and size.

To address our research objective, the children variable was transformed to create a new variable, family_size, defined as the total number of children in a family plus two. This transformation assumes a baseline family size of two individuals (e.g., parents) and ensures consistency in defining the dependent variable.

## Generalized Linear Models

```{r, echo=FALSE, message=FALSE, warning=FALSE, fig.pos="H"}

plot_weibull <- ggplot() +
  geom_density(aes(x = portugal$family_size, color = "Actual"), size = 1.2) +
  geom_density(aes(x = portugal$pred_weibull, color = "Predicted"), size = 1.2) +
  labs(title = "Weibull Regression: Prediction vs Actual",
       x = "Family Size",
       y = "Density",
       color = "Legend") +
  theme_minimal()

plot_gamma <- ggplot() +
  geom_density(aes(x = portugal$family_size, color = "Actual"), size = 1.2) +
  geom_density(aes(x = portugal$pred_gamma, color = "Predicted"), size = 1.2) +
  labs(title = "Gamma Regression: Prediction vs Actual",
       x = "Family Size",
       y = "Density",
       color = "Legend") +
  theme_minimal()

plot_poisson <- ggplot() +
  geom_density(aes(x = portugal$family_size, color = "Actual"), size = 1.2) +
  geom_density(aes(x = portugal$pred_poisson, color = "Predicted"), size = 1.2) +
  labs(title = "Poisson Regression: Prediction vs Actual",
       x = "Family Size",
       y = "Density",
       color = "Legend") +
  theme_minimal()

combined_plot <- (plot_weibull / plot_gamma / plot_poisson) +
  plot_layout(ncol = 1, heights = c(10, 10, 10)) 

print(combined_plot)

```

## Compare

```{r, echo=FALSE, message=FALSE, warning=FALSE, fig.pos="H"}
poisson_rmse <- sqrt(mean((portugal$family_size - predict(poisson_model, type = "response"))^2))
gamma_rmse <- sqrt(mean((portugal$family_size - predict(gamma_model, type = "response"))^2))
weibull_rmse <- sqrt(mean((portugal$family_size - predict(weibull_model, type = "response"))^2))

model_comparison <- data.frame(
  Model = c("Poisson", "Gamma", "Weibull"),
  AIC = c(AIC(poisson_model), AIC(gamma_model), AIC(weibull_model)),
  BIC = c(BIC(poisson_model), BIC(gamma_model), BIC(weibull_model)),
  Log_Likelihood = c(logLik(poisson_model), logLik(gamma_model), logLik(weibull_model)),
  RMSE = c(poisson_rmse, gamma_rmse, weibull_rmse)
)

kable(model_comparison, format = "latex",digits = 3, align = "c") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                full_width = F) %>%
  column_spec(1, bold = TRUE, color = "white", background = "#0073C2") %>%
  column_spec(2:5, background = "#F2F2F2") %>%
  add_header_above(c("Model Comparison" = 5)) %>%
  footnote(general = "AIC, BIC, Log-Likelihood, and RMSE for different regression models.")
```

# Result

## Generalized Gamma Linear Model
```{=tex}
\begin{equation}
\text{Gamma GLM: } \mathbb{E}[Y \mid X_1, X_2] = \exp(\beta_0 + \beta_1 \cdot X_1 + \beta_2 \cdot X_2)
\label{eq:gamma_glm}
\end{equation}

\noindent
where:
\begin{itemize}
    \item $Y$ is the response variable, following a Gamma distribution.
    \item $X_1$ and $X_2$ are predictor variables.
    \item $\beta_1$ and $\beta_2$ are the coefficients associated with $X_1$ and $X_2$.
    \item $\beta_0$ is the intercept term.
\end{itemize}

\begin{equation}
\text{Link Function: } g(\mathbb{E}[Y]) = \log(\mathbb{E}[Y])
\label{eq:log_link}
\end{equation}

\noindent
where:
\begin{itemize}
    \item The log link function ensures $\mathbb{E}[Y] > 0$.
    \item The linear predictor is given by $\eta = \beta_0 + \beta_1 X_1 + \beta_2 X_2$.
    \item The expectation of $Y$ is modeled as $\mathbb{E}[Y] = \exp(\eta)$.
\end{itemize}
```
## Model Summary and Overdispersion

```{r, echo=FALSE, message=FALSE, warning=FALSE, fig.pos="H"}
portugal$residuals <- residuals(gamma_model, type = "pearson")
portugal$fitted <- fitted(gamma_model)

p1 <- ggplot(portugal, aes(x = literacy, y = residuals)) +
  geom_boxplot(fill = "#0073C2", alpha = 0.5) +
  labs(title = "Residuals by Literacy",
       x = "Literacy",
       y = "Pearson Residuals") +
  theme_minimal()

p2 <- ggplot(portugal, aes(x = monthsSinceM, y = residuals)) +
  geom_point(alpha = 0.4) +
  geom_smooth(method = "loess", color = "#0073C2", se = FALSE) +
  labs(title = "Residuals by Months Since Marriage",
       x = "Months Since Marriage",
       y = "Pearson Residuals") +
  theme_minimal()

p3 <- ggplot(portugal, aes(x = fitted, y = residuals)) +
  geom_point(alpha = 0.4) +
  geom_smooth(method = "loess", color = "#0073C2", se = FALSE) +
  labs(title = "Residuals by Linear Predictor",
       x = "Linear Predictor",
       y = "Pearson Residuals") +
  theme_minimal()

ggarrange(p1, p2, p3, 
          ncol = 1, nrow = 3, 
          common.legend = TRUE)
```

```{r, echo=FALSE, message=FALSE, warning=FALSE, fig.pos="H"}
gamma_summary <- summary(gamma_model)

coefficients_table <- as.data.frame(gamma_summary$coefficients)
colnames(coefficients_table) <- c("Estimate", "Std. Error", "t value", "Pr(>|t|)")
coefficients_table <- cbind(Variable = rownames(coefficients_table), coefficients_table)

coefficients_table$`Pr(>|t|)` <- ifelse(coefficients_table$`Pr(>|t|)` < 2.2e-16, "< 2.2e-16", format(coefficients_table$`Pr(>|t|)`, scientific = TRUE, digits = 2))

dispersion_param <- gamma_summary$dispersion
null_deviance <- gamma_summary$null.deviance
residual_deviance <- gamma_summary$deviance
df_null <- gamma_summary$df.null
df_residual <- gamma_summary$df.residual

deviance_table <- data.frame(
  Variable = c("Dispersion Parameter", "Null Deviance", "Residual Deviance", "Null DF", "Residual DF"),
  Estimate = c(dispersion_param, null_deviance, residual_deviance, df_null, df_residual),
  `Std. Error` = "", `t value` = "", `Pr(>|t|)` = "",
  stringsAsFactors = FALSE
)

coefficients_table[, 2:4] <- lapply(coefficients_table[, 2:4], function(x) format(x, digits = 3, scientific = FALSE))
deviance_table[, 2] <- format(deviance_table[, 2], digits = 3, scientific = FALSE)

colnames(deviance_table) <- colnames(coefficients_table)

final_table <- rbind(coefficients_table, deviance_table)
rownames(final_table) <- NULL  

kbl(final_table, format = "latex", escape = FALSE, booktabs = TRUE, align = "c") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
                full_width = F, latex_options = "scale_down", position = "center") %>%
  column_spec(1, bold = TRUE, color = "white", background = "#0073C2") %>%
  column_spec(2:5, background = "#F2F2F2") %>%
  add_header_above(c("Gamma Model Summary" = 5)) %>%
  footnote(general = "Coefficient estimates, standard errors, t-values, significance levels, and dispersion metrics for the Gamma model.")

```


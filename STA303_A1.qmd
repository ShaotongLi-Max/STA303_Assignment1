---
title: "Modeling Family Size: Literacy and Marriage Age in Rural Portugal"
subtitle: "A Generalized Linear Model Approach"
author: 
  - Shaotong (Max) Li
date: 2024/11/17
date-format: long
abstract: ""
number-sections: true
format: pdf
---

```{r}
#| include: false
#| warning: false
#| message: false
#| echo: false

install.packages(c("ggplot2", "MASS", "dplyr","survival","kableExtra"))

library(ggplot2)  
library(MASS)    
library(dplyr)    
library(survival)
library(kableExtra)


# Load data
load("portugal.RData")

# Define family size
portugal$family_size <- portugal$children + 2

# Ensure monthsSinceM is treated as a numeric variable
portugal$monthsSinceM <- as.numeric(portugal$monthsSinceM)  

# Gamma Regression Model
gamma_model <- glm(
  family_size ~ literacy + monthsSinceM,
  data = portugal,
  family = Gamma(link = "log") 
)

# Fit a Weibull Regression Model
weibull_model <- survreg(Surv(family_size) ~ literacy + monthsSinceM, 
                         data = portugal, 
                         dist = "weibull")

# Fit Poisson Regression Model
poisson_model <- glm(
  family_size ~ literacy + monthsSinceM,
  data = portugal,
  family = poisson(link = "log")
)

# Generate predictions for all models
portugal <- portugal %>%
  mutate(
    pred_weibull = predict(weibull_model, type = "response"),
    pred_gamma = predict(gamma_model, type = "response"),
    pred_poisson <- predict(poisson_model, type = "response")
  )

```

# Introduction

# Methods

## Clean Data Process

In this study, we began by carefully selecting the variables most relevant to our research question: understanding how literacy and marriage age affect family size in rural Portugal. From the dataset, we identified three key variables:

children (Numerical): This variable represents the number of children in a family and serves as the basis for calculating the dependent variable, family_size.

ageMarried (Categorical): This variable captures the marriage age of individuals, categorized into meaningful intervals: 0to15, 15to18, 18to20, 20to22, 22to25, 25to30, and 30toInf. It reflects the social and demographic variation in marriage age and is included as an independent variable in the model.

literacy (Binary): A factor variable indicating whether an individual is literate (yes) or not (no). This variable is included as a second independent variable, as literacy is hypothesized to influence family planning and size.

To address our research objective, the children variable was transformed to create a new variable, family_size, defined as the total number of children in a family plus two. This transformation assumes a baseline family size of two individuals (e.g., parents) and ensures consistency in defining the dependent variable.

## Generalized Linear Models

# Result

## Weibull Distribution Model

```{r, echo=FALSE, message=FALSE, warning=FALSE, fig.pos="H"}
plot_weibull <- ggplot() +
  geom_density(aes(x = portugal$family_size, color = "Actual"), size = 1.2) +
  geom_density(aes(x = portugal$pred_weibull, color = "Predicted"), size = 1.2) +
  labs(title = "Weibull Regression: Prediction vs Actual",
       x = "Family Size",
       y = "Density",
       color = "Legend") +
  theme_minimal()

# Print the plot
print(plot_weibull)
```

## Gamma Distribution Model

```{r, echo=FALSE, message=FALSE, warning=FALSE, fig.pos="H"}

plot_gamma <- ggplot() +
  geom_density(aes(x = portugal$family_size, color = "Actual"), size = 1.2) +
  geom_density(aes(x = portugal$pred_gamma, color = "Predicted"), size = 1.2) +
  labs(title = "Gamma Regression: Prediction vs Actual",
       x = "Family Size",
       y = "Density",
       color = "Legend") +
  theme_minimal()

print(plot_gamma)


```

## Poisson Distribution Model

```{r, echo=FALSE, message=FALSE, warning=FALSE, fig.pos="H"}
# Plot Poisson Model Prediction vs Actual
plot_poisson <- ggplot() +
  geom_density(aes(x = portugal$family_size, color = "Actual"), size = 1.2) +
  geom_density(aes(x = portugal$pred_poisson, color = "Predicted"), size = 1.2) +
  labs(title = "Poisson Regression: Prediction vs Actual",
       x = "Family Size",
       y = "Density",
       color = "Legend") +
  theme_minimal()

# Print the plot
print(plot_poisson)

```

## Compare

```{r, echo=FALSE, message=FALSE, warning=FALSE}
# Compute RMSE for each model
poisson_rmse <- sqrt(mean((portugal$family_size - predict(poisson_model, type = "response"))^2))
gamma_rmse <- sqrt(mean((portugal$family_size - predict(gamma_model, type = "response"))^2))
weibull_rmse <- sqrt(mean((portugal$family_size - predict(weibull_model, type = "response"))^2))

# Create comparison table
model_comparison <- data.frame(
  Model = c("Poisson", "Gamma", "Weibull"),
  AIC = c(AIC(poisson_model), AIC(gamma_model), AIC(weibull_model)),
  BIC = c(BIC(poisson_model), BIC(gamma_model), BIC(weibull_model)),
  Log_Likelihood = c(logLik(poisson_model), logLik(gamma_model), logLik(weibull_model)),
  RMSE = c(poisson_rmse, gamma_rmse, weibull_rmse)
)

# Print the comparison table
print(model_comparison)

```

## Overdispersion

```{r, echo=FALSE, message=FALSE, warning=FALSE}
# Compute mean and variance of family_size
mean_family_size <- mean(portugal$family_size)
var_family_size <- var(portugal$family_size)

print(c(Mean_Family_Size = mean_family_size, Variance_Family_Size = var_family_size))

# Compute dispersion parameter for Gamma Model
gamma_dispersion <- sum(residuals(gamma_model, type = "pearson")^2) / gamma_model$df.residual

print(c(Gamma_Dispersion = gamma_dispersion))

# Plot residuals to check variance consistency
plot(residuals(gamma_model, type = "pearson"), main = "Gamma Model Residuals", ylab = "Pearson Residuals", xlab = "Index", col = "blue", pch = 16)
abline(h = 0, col = "red", lwd = 2)

```

##  Interpret

```{r, echo=FALSE, message=FALSE, warning=FALSE}
summary(gamma_model)
```
